---
title: ""
format:
  html:
    theme: lumen
    page-layout: full
---

```{r setup, include=FALSE}
# dir()
# here::i_am("ep2024.Rproj")

library(tidyverse)
library(htmltools)

knitr::opts_chunk$set(echo = F, message = F)

# sets <- jsonlite::fromJSON(here::here("settings.json"))

# source(here::here("party_utils.R"))
print(getwd())
try({
  aidat <- readRDS("../data/aidat.rds")

})

try({
  aidat <- readRDS("data/aidat.rds")

})


library(glue)
# write_csv(aidat, file = "../data/aidat.csv")

aidat <- aidat %>% 
  filter(hash != "9b95c3d2aa6c6bbc56fc8f15410a6564") %>% 
  filter(hash != "d96dfdb34aeb0f5a6f30ded2d5d0e648")

```



::: {.panel-tabset}


## Overall Statistics


```{r}
library(shiny)
library(shinydashboard)
library(tidyverse)
library(scales) # For formatting large numbers
library(htmltools)

# Helper function to format large numbers
format_large_number <- function(x) {
  case_when(
    x >= 1e6 ~ paste0(round(x / 1e6, 1), "M"),  # Format millions
    x >= 1e3 ~ paste0(round(x / 1e3, 1), "k"),  # Format thousands
    TRUE ~ as.character(x)                     # Keep small numbers as-is
  )
}



# Function to generate summary boxes with unique ads, spending, and impressions
generate_summary_boxes <- function(data) {
  # Summarize data
  zerotohero <- data %>% 
    distinct(hash, .keep_all = T) %>% 
    group_by(ai) %>% 
    summarize(unique_ads = n()) %>% 
    ungroup()
  
  summary_data <- data %>%
    group_by(ai) %>%
    summarize(
      spend_lower = sum(spend_lower, na.rm = TRUE),
      spend_upper = sum(spend_upper, na.rm = TRUE),
      impressions_lower = sum(impressions_lower, na.rm = TRUE),
      impressions_upper = sum(impressions_upper, na.rm = TRUE)
    ) %>%
    arrange(desc(ai)) %>% 
    left_join(zerotohero)
    
  
  # Custom valueBox function
  custom_value_box <- function(title, value, color) {
    div(
      style = glue("
        background-color: {color}; 
        color: black; 
        padding: 10px; 
        margin: 10px; 
        border-radius: 8px; 
        text-align: center; 
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        font-size: 1.2em;"),
      strong(title), br(),
      value
    )
  }

  # AI Content Section
  ai_boxes <- tagList(
    custom_value_box(
      "Unique Ads",
      format_large_number(summary_data$unique_ads[1]),
      "#d9edf7" # Light blue for unique ads
    ),
    custom_value_box(
      "Spending",
      paste0("€", format_large_number(summary_data$spend_lower[1]), 
             " - €", format_large_number(summary_data$spend_upper[1])),
      "#f2f2f2"
    ),
    custom_value_box(
      "Impressions",
      paste0(format_large_number(summary_data$impressions_lower[1]), 
             " - ", format_large_number(summary_data$impressions_upper[1])),
      "#e6e6e6"
    )
  )
  
  # Non-AI Content Section
  non_ai_boxes <- tagList(
    custom_value_box(
      "Unique Ads",
      format_large_number(summary_data$unique_ads[2]),
      "#d9edf7"
    ),
    custom_value_box(
      "Spending",
      paste0("€", format_large_number(summary_data$spend_lower[2]), 
             " - €", format_large_number(summary_data$spend_upper[2])),
      "#f2f2f2"
    ),
    custom_value_box(
      "Impressions",
      paste0(format_large_number(summary_data$impressions_lower[2]), 
             " - ", format_large_number(summary_data$impressions_upper[2])),
      "#e6e6e6"
    )
  )
  
  # Layout using CSS Grid
  div(
    style = "display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-top: 20px;",
    div(
      tags$h3("AI Content", style = "text-align: center; color: #333;"),
      ai_boxes
    ),
    div(
      tags$h3("Non-AI Content", style = "text-align: center; color: #333;"),
      non_ai_boxes
    )
  )
}

generate_summary_boxes(aidat)
# debugonce(generate_summary_boxes)
```


## By Party

### Unique AI Ads

```{r}
library(highcharter)
library(tidyverse)

tomerge <- aidat %>%
  filter(ai == 1) %>% # Focus on AI ads
  group_by(partei) %>%
  summarize(
    total_spend = sum(spend_lower, na.rm = TRUE),
    impressions = sum(impressions_lower, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(total_spend = ifelse(total_spend==50, 100, total_spend))

# Step 1: Aggregate Data for AI Ads
ai_data <- aidat %>%
  distinct(hash, .keep_all = T) %>% 
  filter(ai == 1) %>% 
  group_by(partei) %>%
  summarize(
    total_n = n(),
    # total_spend = sum(spend_lower, na.rm = TRUE),
    # impressions = sum(impressions_lower, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  # count(partei)# Focus on AI ads
  left_join(tomerge) %>% 
  mutate(total_spend = ifelse(total_spend==50, 100, total_spend)) %>% 
  mutate(
    dots = total_n, # Aggregate to €1000 per dot
    dots = round(dots),        # Round to avoid fractional dots
    col = case_when(           # Assign custom party colors
      partei == "SPD" ~ "#EB001F",
      partei == "B90/GRÜNE" ~ "#64A12D",
      partei == "FDP" ~ "#FFED00",
      partei == "CDU" ~ "#000000",
      partei == "AfD" ~ "#009EE0",
      partei == "CSU" ~ "#008AC5",
      partei == "Piraten" ~ "#FFA500",
      partei == "NPD" ~ "#d59e29",
      TRUE ~ "#BE3075" # Default color
    )
  ) %>%
  arrange(desc(total_spend)) # Sort by spending

# Step 2: Highcharter Item Chart
hchart(
  ai_data %>% arrange(desc(dots)),
  "item",
  hcaes(
    name = partei,
    y = dots,      # Use dots to represent €1000 aggregated spending
    label = partei,
    color = col    # Custom colors for parties
  ),
  # name = "€100 Spending Blocks",
  showInLegend = TRUE
) %>%
  hc_title(text = "Unique AI Ads by Political Parties (1 dot = 1 ad)") %>%
  hc_tooltip(
    useHTML = TRUE,
    pointFormat = paste0(
      "<b>{point.name}</b><br>",
      "Total Spend: €{point.total_spend:,.0f}<br>",
      "Impressions: {point.impressions:,.0f}"
    )
  ) %>%
  hc_legend(labelFormat = '{name} <span style="opacity: 0.4">{y} dots</span>') %>%
  hc_credits(
    enabled = TRUE,
    text = "Source: Meta Ad Library and data compiled by Who Targets Me. Data Viz: Fabio Votta (@favstats)."
  )


```

### Spending

```{r}
library(highcharter)
library(tidyverse)

# Step 1: Aggregate Data for AI Ads
ai_data <- aidat %>%
  filter(ai == 1) %>% # Focus on AI ads
  group_by(partei) %>%
  summarize(
    total_spend = sum(spend_lower, na.rm = TRUE),
    impressions = sum(impressions_lower, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  mutate(total_spend = ifelse(total_spend==50, 100, total_spend)) %>% 
  # count(partei)
  mutate(
    dots = total_spend / 100, # Aggregate to €1000 per dot
    dots = round(dots),        # Round to avoid fractional dots
    col = case_when(           # Assign custom party colors
      partei == "SPD" ~ "#EB001F",
      partei == "B90/GRÜNE" ~ "#64A12D",
      partei == "FDP" ~ "#FFED00",
      partei == "CDU" ~ "#000000",
      partei == "AfD" ~ "#009EE0",
      partei == "CSU" ~ "#008AC5",
      partei == "Piraten" ~ "#FFA500",
      partei == "NPD" ~ "#d59e29",
      TRUE ~ "#BE3075" # Default color
    )
  ) %>%
  arrange(desc(total_spend)) # Sort by spending

# Step 2: Highcharter Item Chart
hchart(
  ai_data,
  "item",
  hcaes(
    name = partei,
    y = dots,      # Use dots to represent €1000 aggregated spending
    label = partei,
    color = col    # Custom colors for parties
  ),
  name = "€100 Spending Blocks",
  showInLegend = TRUE
) %>%
  hc_title(text = "AI Ad Spending by Political Parties (€100 per Dot)") %>%
  hc_tooltip(
    useHTML = TRUE,
    pointFormat = paste0(
      "<b>{point.name}</b><br>",
      "Total Spend: €{point.total_spend:,.0f}<br>",
      "Impressions: {point.impressions:,.0f}"
    )
  ) %>%
  hc_legend(labelFormat = '{name} <span style="opacity: 0.4">{y} dots</span>') %>%
  hc_credits(
    enabled = TRUE,
    text = "Source: Meta Ad Library and data compiled by Who Targets Me. Data Viz: Fabio Votta (@favstats)."
  )


```


## Content Exploring

WIP!
  

::: {.gallery}

<!-- #2585232091623704-adid -->

<div class="gallery-item">

<img src="AI_CDU.jpg" alt="Image 1"/>

<p class="description">

-   **Views:** 10,000<br>

-   **Money Spent on Ad:** \$500<br>
-   **People Targeted:** 25,000

</p>

</div>

<!-- # 1024684215458526 ad id -->

<div class="gallery-item">

<img src="Afd_oma.png" alt="Image 2"/>

<p class="description">

-   **Views:** 8,500<br>

-   **Money Spent on Ad:** \$350<br>
-   **People Targeted:** 20,000

</p>

</div>

<!-- # ad id 808709021104029 -->

<div class="gallery-item">

<img src="ai_generated_dog.jpg" alt="Image 3"/>

<p class="description">

-   **Views:** 15,000<br>

-   **Money Spent on Ad:** \$750<br>
-   **People Targeted:** 30,000

</p>

</div>

:::



## Methodology


<!-- Custom CSS -->
<style>
body {
  font-family: "Helvetica Neue", Arial, sans-serif;
  line-height: 1.6;
  color: #333;
  background-color: #f9f9f9;
  margin: 0;
}

h1, h2 {
  text-align: center;
  color: #0056b3;
}

.section-container {
  background-color: white;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  margin: 20px auto;
  max-width: 800px;
}

.section-container p {
  font-size: 1.1em;
  text-align: justify;
}

.section-container strong {
  color: #0073e6;
}

.button-container {
  text-align: center;
  margin-top: 20px;
}

.button {
  display: inline-block;
  padding: 10px 20px;
  font-size: 1em;
  color: white;
  background-color: #0073e6;
  text-decoration: none;
  border-radius: 5px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  transition: background-color 0.3s;
}

.button:hover {
  background-color: #0056b3;
}
</style>

<!-- Content -->
<div class="section-container">
  <h1>CampAIgn Tracker</h1>
  
  <h2>Daten</h2>
  <p>
    Für unseren <strong>CampAIgn Tracker</strong> greifen wir aktuell auf die offiziellen Partei-Accounts der deutschen Parteien zu und analysieren deren Beiträge, die sie als <strong>bezahlte Werbung</strong> ausgespielt haben. Dafür nutzen wir Metadaten zu <strong>Targeting, Spending</strong> und vielem mehr und kombinieren diese mit einer Auswertung der einzelnen Beiträge zum <strong>Einsatz von KI</strong>.
  </p>
</div>

<div class="section-container">
  <h2>Prozess</h2>
  <p>
    Wir setzen auf einem KI-Modell auf, welches <strong>automatisiert erkennt</strong>, wann Bilder und Videos mit KI bearbeitet oder erstellt wurden. Wir wissen, dass diese Detektoren keine <strong>100%ige Genauigkeit</strong> haben. Deshalb schließen wir eine <strong>manuelle Klassifizierung</strong> an, in der Codierer:innen die Beiträge nochmal prüfen. Somit stellen wir sicher, dass wir alle KI-Bilder zuverlässig erkennen.
  </p>
</div>

<div class="section-container">
  <h2>Bald verfügbar</h2>
  <p>
    Wir erweitern unseren <strong>CampAIgn Tracker</strong> kontinuierlich und werden bald nicht nur offizielle Partei-Accounts inkludieren, sondern <strong>60.000 weitere Accounts</strong> von politischen Akteuren in Deutschland. So ermöglichen wir ein <strong>Live-Tracking von KI-Inhalten</strong> bei den nächsten Wahlen.
  </p>
</div>

<div class="section-container button-container">
  <a href="mailto:research@yourorganization.de" class="button">Kontaktieren Sie unsere Wissenschaftler!</a>
</div>


::: 




